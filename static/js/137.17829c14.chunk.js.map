{"version":3,"file":"static/js/137.17829c14.chunk.js","mappings":"mTAGaA,EAAgBC,EAAAA,GAAAA,QAAH,4CAIbC,EAAeD,EAAAA,GAAAA,GAAH,iIAQZE,EAAOF,EAAAA,GAAAA,GAAH,sEAKJG,EAAWH,EAAAA,GAAAA,GAAH,+CAIRI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,0J,mMCtBVM,EAAON,EAAAA,GAAAA,KAAH,8IAQJO,EAAQP,EAAAA,GAAAA,MAAH,yPAcLQ,EAASR,EAAAA,GAAAA,OAAH,2U,SCWnB,EA7BqB,SAAC,GAAkB,IAAhBS,EAAe,EAAfA,SAChBC,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAEC,kBAEIC,EAAQF,EAAEG,OAAOC,SAASF,MAAMG,OAE3BC,OALQ,uBAMjBC,IAAAA,OAAAA,QAAwB,0BANP,0BAUnBT,EAASI,GAETF,EAAEG,OAAOK,QAZU,2CAAH,sDAelB,OACE,UAACb,EAAD,CAAMG,SAAUC,EAAhB,WACE,SAACH,EAAD,CAAOa,KAAK,QAAQC,KAAK,OAAOC,YAAY,kBAAmB,KAE/D,SAACd,EAAD,qBAHF,MAMH,E,UCqCD,EArDe,WACb,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRlB,EAAK,UAAGc,EAAaK,IAAI,gBAApB,QAAgC,GAC3C,GAAKnB,EAAL,CAIA,IAAMoB,EAAS,mCAAG,gHAEYC,EAAAA,EAAAA,IAAoBrB,GAFhC,gBAGS,KADfsB,EAFM,EAENA,SACIC,QACVlB,IAAAA,OAAAA,MAAsB,mBACtBO,EAAU,KAEVA,EAAUU,GAPE,gDAUdV,EAAU,IAVI,yDAAH,qDAcfQ,GAhBC,CAiBF,GAAE,CAACN,IAMJ,OACE,2BACE,UAAC,KAAD,YACE,SAAC,KAAD,2BACA,SAAC,EAAD,CAAclB,SARC,SAAAI,GACnBe,EAAgB,CAAEf,MAAAA,GACnB,IAM8C,KAEzC,SAAC,KAAD,UACGW,EAAOa,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WAEE,SAAC,KAAD,CAAYC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMb,GAAtD,SACGS,EAAMK,SAHIL,EAAME,GADN,UAY1B,C,mMChEYI,EAAU,mCCEvBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sCAAyCD,IADlC,uBACtBG,EADsB,EACtBA,KADsB,kBAGvBA,GAHuB,2CAAH,qDAMhBb,EAAmB,mCAAG,WAAMrB,GAAN,yFACVgC,EAAAA,EAAAA,IAAA,gCACID,EADJ,iCACoC/B,IAF1B,uBACzBkC,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,sDAQnBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,iBACXI,EADW,oBACQL,EADR,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdG,EAAc,mCAAG,WAAMD,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,iBACXI,EADW,4BACgBL,EADhB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAiB,mCAAG,WAAMF,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,iBACXI,EADW,4BACgBL,EADhB,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies.jsx","services/ApiKey.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding: 0 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin: 30px 0;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  /* color: #833ab4; */\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 8px;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #1944ec;\n  transition: color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #e20707;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n  outline: none;\n\n  &:focus {\n    border-color: #f94141;\n    box-shadow: 0 0 5px rgba(13, 87, 170, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #833ab4;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n  outline: none;\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    background-color: #e20707;\n  }\n`;\n","import Notiflix from 'notiflix'; // Імпорт бібліотеки Notiflix, яка використовується для виведення повідомлень\n\nimport { Button, Form, Input } from './SearchMovies.styled';\n\nimport PropTypes from 'prop-types';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = async e => {\n    e.preventDefault(); // Заборона стандартної поведінки форми\n\n    const query = e.target.elements.query.value; // Отримання значення з поле пошукового запиту\n\n    if (!query.trim()) {\n      Notiflix.Notify.failure('Please enter something'); // Виведення повідомлення про помилку, якщо пошуковий запит порожній\n      return;\n    }\n\n    onSubmit(query);\n\n    e.target.reset(); // Очищення значень полів форми\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />{' '}\n      {/* Поле вводу пошукового запиту */}\n      <Button>Search</Button> {/* Кнопка пошуку */}\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchMovies;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from 'services/api';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport Notiflix from 'notiflix';\nimport {\n  SectionTitle,\n  StyledSection,\n  List,\n  ListItem,\n  StyledLink,\n} from 'components/MovieList/MovieList.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) {\n      return;\n    }\n\n    const getMovies = async () => {\n      try {\n        const { results } = await fetchMoviesBySearch(query);\n        if (results.length === 0) {\n          Notiflix.Notify.error('No movies found');\n          setMovies([]);\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        setMovies([]);\n      }\n    };\n\n    getMovies();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main>\n      <StyledSection>\n        <SectionTitle>Movies Page</SectionTitle>\n        <SearchMovies onSubmit={handleSubmit} />{' '}\n        {}\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              {}\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </ListItem>\n          ))}\n        </List>\n      </StyledSection>\n    </main>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = '84068d2acd9315c3be219a34cf5a6c3a';\n","import axios from 'axios';\nimport { API_KEY } from './ApiKey';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","Form","Input","Button","onSubmit","handleSubmit","e","preventDefault","query","target","elements","value","trim","Notiflix","reset","name","type","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","getMovies","fetchMoviesBySearch","results","length","map","movie","to","id","state","from","title","API_KEY","axios","fetchTrendMovies","data","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}